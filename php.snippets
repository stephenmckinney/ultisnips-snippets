extends html

snippet array "array"
$${1:arrayName} = array('${2}' => ${3});${4}
endsnippet

snippet case "case"
case '${1:value}':
	${2:// code...}
	break;${3}
endsnippet

snippet class "class"
/**
 * ${1}
 */
class ${2:ClassName}
{
	${3}
	function ${4:__construct}(${5:argument})
	{
		${6:// code...}
	}
}
endsnippet

snippet classe "classe"
/**
 * ${1}
 */
class ${2:ClassName} extends ${3:AnotherClass}
{
	${4}
	function ${5:__construct}(${6:argument})
	{
		${7:// code...}
	}
}
endsnippet

snippet def "def"
define('${1}'${2});${3}
endsnippet

snippet defd "defd"
${1}defined('${2}')${3}
endsnippet

snippet do "do"
do {
	${2:// code... }
} while (${1:/* condition */});"
endsnippet

snippet doc_cp "doc_cp"
/**
 * ${1:undocumented class}
 *
 * @package ${2:default}
 * @author ${3:`!v g:snips_author`}
 **/${4}
endsnippet

snippet doc_f "doc_f"
/**
 * $2
 * @return ${4:void}
 * @author ${5:`!v g:snips_author`}
 **/
${1:public }function ${2:someFunc}(${3})
{${6}
}
endsnippet

snippet doc_h "doc_h"
/**
 * ${1}
 *
 * @author ${2:`!v g:snips_author`}
 * @version ${3:$Id$}
 * @copyright ${4:$2}, `!v strftime('%d %B, %Y')`
 * @package ${5:default}
 **/
/**
 * Define DocBlock *//
endsnippet

snippet doc_i "doc_i"
/**
 * $1
 * @package ${2:default}
 * @author ${3:`!v g:snips_author`}
 **/
interface ${1:someClass}
{${4}
} // END interface $1"
endsnippet

snippet ec "ec"
echo "${1:string}"${2};
endsnippet

snippet else "else"
else {
	${1:// code...}
}
endsnippet

snippet elseif "elseif"
elseif (${1:/* condition */}) {
	${2:// code...}
}
endsnippet

snippet for "for"
for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
	${4:// code...}
}
endsnippet

snippet foreach "foreach"
foreach ($${1:variable} as $${2:key}){
	${3:// code...}
}
endsnippet

snippet foreachk "foreachk"
foreach ($${1:variable} as $${2:key} => $${3:value}){
	${4:// code...}
}
endsnippet

snippet fun "fun"
${1:public }function ${2:FunctionName}(${3})
{
	${4:// code...}
}
endsnippet

snippet get "get"
$_GET['${1}']${2}
endsnippet

snippet globals "globals"
$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
endsnippet

snippet if "if"
if (${1:/* condition */}) {
	${2:// code...}
}
endsnippet

snippet ife "ife"
if (${1:/* condition */}) {
	${2:// code...}
} else {
}
endsnippet

snippet inc "inc"
include '${1:file}';${2}
endsnippet

snippet inc1 "inc1"
include_once '${1:file}';${2}
endsnippet

snippet log "log"
error_log(var_export(${1}, true));${2}
endsnippet

snippet php "php"
<?php
${1}
?>
endsnippet

snippet post "post"
$_POST['${1}']${2}
endsnippet

snippet req "req"
require '${1:file}';${2}
endsnippet

snippet req1 "req1"
require_once '${1:file}';${2}
endsnippet

snippet request "request"
$_REQUEST['${1}']${2}
endsnippet

snippet session "session"
$_SESSION['${1}']${2}
endsnippet

snippet switch "switch"
switch ($${1:variable}) {
	case '${2:value}':
		${3:// code...}
		break;
	${5}
	default:
		${4:// code...}
		break;
}
endsnippet

snippet ta "ta"
$this->${1:attr}${2};
endsnippet

snippet tm "tm"
$this->${1:method}(${2:args})${3};
endsnippet

snippet try "try"
try  {
	${1:// code...}
} catch (${2:Exception} $e) {
	${3:// code...}
}
endsnippet

snippet var "var"
var_export(${1});${2}
endsnippet

snippet wh "wh"
while (${1:/* condition */}) {
	${2:// code...}
}
endsnippet

# vim:ft=snippets:
