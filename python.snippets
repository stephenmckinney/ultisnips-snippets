snippet #! "#!"
#!/usr/bin/env python
endsnippet

snippet cla "cla"
class ${1:ClassName}(${2:BaseClassName}):
	"""
	${3:docstring for $1}.
	"""
	${4}
endsnippet

snippet clam "clam"
class ${1:ModelName}(${2:models.Model}):
	"""
	${3:A model of a $1}.
	"""
	${4:properties}
	def __unicode__(self):
		return self.${5:property}:
	class Meta:
		${6:meta properties}
endsnippet

snippet def "def"
def ${1:fname}(${2:`!v indent('.') ? 'self' : ''`}):
	"""${3:docstring for $1}"""
	${4:pass}
endsnippet

snippet defs "defs"
def ${1:fname}(self, ${2:**kwargs}):
	"""${3:docstring for $1}"""
	${3:pass}
endsnippet

snippet docs "docs"
'''
File: ${1:`!v Filename('$1.py', 'foo.py')`}
Author: ${2:`!v g:snips_author`}
Description: ${3}
'''
endsnippet

snippet eli: "eli:"
elif ${1:condition}:
	${1:code...}
endsnippet

snippet els: "els:"
else:
	${1:code...}
endsnippet

snippet if: "if:"
if ${1:condition}:
	${2:code...}
endsnippet

snippet ife: "ife:"
if ${1:condition}:
	${2:code...}
else:
	${3:code...}
endsnippet

snippet for "for"
for ${1:object} in ${2:objects}:
	${3:pass}
${4}
endsnippet

snippet fro "fro"
from ${1:package} import ${2:module}
${3}
endsnippet

snippet ifmain "ifmain"
if __name__ == '__main__':
	${1:main()}
endsnippet

snippet imp "imp"
import ${1:module}
${2}
endsnippet

snippet init "init"
def __init__(self, ${1:args}):
	${2}
endsnippet

snippet lam "lam"
${1:var} = lambda ${2:vars} : ${3:action}
endsnippet

snippet property "property"
def ${1:foo}():
	doc = "${2:The $1 property.}"
	def fget(self):
		${3:return self._$1}
	def fset(self, value):
		${4:self._$1 = value}
endsnippet

snippet whi "whi"
while ${1:condition}:
	${2:# code...}
endsnippet

snippet pdb "pdb"
import pdb; pdb.set_trace()
endsnippet

snippet try "Try/Except"
try:
	${1:pass}
except ${2:Exception}${3:, e}:
	${4:raise $3}
endsnippet

snippet try "Try/Except/Else"
try:
	${1:pass}
except ${2:Exception}${3:, e}:
	${4:raise $3}
else:
	${5:pass}
endsnippet

snippet try "Try/Except/Finally"
try:
	${1:pass}
except ${2:Exception}${3:, e}:
	${4:raise $3}
finally:
	${5:pass}
endsnippet

snippet try "Try/Except/Else/Finally"
try:
	${1:pass}
except ${2:Exception}${3:, e}:
	${4:raise $3}
else:
	${5:pass}
finally:
	${6:pass}
endsnippet

# vim:ft=snippets:
